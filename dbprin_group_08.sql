DROP DATABASE IF EXISTS DBPRIN_GROUP_08;

CREATE DATABASE DBPRIN_GROUP_08;

\C DBPRIN_GROUP_08

-- Note:
-- if any changes differ FROM THE ERD Make a note within the table.

-- Owen
CREATE TABLE DEPARTMENT (
    DEPT_ID SERIAL PRIMARY KEY,
    DEPT_NAME VARCHAR(50),
    DESCRIPTION TEXT
);

-- Owen
CREATE TABLE COURSE (
    COURSE_ID SERIAL PRIMARY KEY,
    DEPT_ID INT NOT NULL,
    COURSE_NAME VARCHAR(50),
    COURSE_DESCRIPTION TEXT,
    COURSE_COST DECIMAL(7, 2),
    FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID)
);

-- Bradley

CREATE TABLE SUBJECT (
    SUBJECT_ID SERIAL PRIMARY KEY,
    SUBJECT_NAME VARCHAR(50),
    SUBJECT_LEVEL SMALLINT,
    SUBJECT_DESCRIPTION TEXT
);

-- Bradley
CREATE TABLE COURSE_SUBJECT (
    COURSE_ID INT NOT NULL,
    SUBJECT_ID INT NOT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
    FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECT(SUBJECT_ID),
    PRIMARY KEY (COURSE_ID, SUBJECT_ID)
);

-- Steph
CREATE TABLE STAFF (
    STAFF_ID SERIAL PRIMARY KEY,
    DEPT_ID INT NOT NULL,
    BRANCH_ID INT NOT NULL,
    IS_BRANCH_MANAGER BOOLEAN,
    STAFF_EMAIL VARCHAR(50),
    STAFF_MOBILE_CODE VARCHAR(4),
    STAFF_MOBILE_NUMBER VARCHAR(15),
    STAFF_FIRST_NAME VARCHAR(30),
    STAFF_MIDDLE_NAME VARCHAR(30),
    STAFF_LAST_NAME VARCHAR(30),
    STAFF_TITLE ENUM,
    STAFF_ADDR1 VARCHAR(50),
    STAFF_ADDR2 VARCHAR(50),
    STAFF_CITY VARCHAR(30),
    STAFF_POSTCODE VARCHAR(20),
    STAFF_COUNTRY_CODE CHAR(2),
    FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID),
    FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH(BRANCH_ID)
);

-- Steph
CREATE TABLE STAFF_ASSIGNMENT (
    STAFF_ASSIGNMENT_ID SERIAL PRIMARY KEY,
    BRANCH_MANAGER_ID INT NOT NULL,
    STAFF_ID INT NOT NULL,
    ASSIGNMENT_TITLE VARCHAR(30),
    ASSIGNMENT_DESCRIPTION TEXT,
    ASSIGNMENT_DEADLINE TIMESTAMP,
    IS_URGENT BOOLEAN,
    FOREIGN KEY (BRANCH_MANAGER_ID) REFERENCES STAFF(STAFF_ID),
    FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID),
);

-- Bradley
CREATE TABLE COURSE_STAFF (
    COURSE_ID INT NOT NULL,
    STAFF_ID INT NOT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
    FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID),
    PRIMARY KEY (COURSE_ID, STAFF_ID)
);

-- Steph
CREATE TABLE ROLE (
    ROLE_ID SERIAL PRIMARY KEY,
    ROLE_NAME VARCHAR(50),
    ROLE_DESCRIPTION TEXT
);

-- Steph
CREATE TABLE STAFF_ROLE (
    COURSE_ID INT NOT NULL,
    STAFF_ID INT NOT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
    FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID),
    PRIMARY KEY (COURSE_ID, STAFF_ID)
);

-- Steph
-- TABLE IN ERD has issues
CREATE TABLE STAFF_AVAILABILITY (
);

-- Steph
-- Consdiering adding email
CREATE TABLE BRANCH (
 
    -- BRANCH_EMAIL VARCHAR(50)
    BRANCH_ID SERIAL PRIMARY KEY,
    BRANCH_ADDR1 VARCHAR(50),
    BRANCH_ADDR2 VARCHAR(50),
    BRANCH_CITY VARCHAR(30),
    BRANCH_POSTCODE VARCHAR(20),
    BRANCH_COUNTRY_CODE CHAR(2),
    BRANCH_PHONE_NUMBER VARCHAR(15),
    BRANCH_PHONE_COUNTRY_CODE VARCHAR(4),
);

-- Steph
CREATE TABLE ROOM (
    ROOM_ID SERIAL PRIMARY KEY,
    BRANCH_ID INT NOT NULL,
    ROOM_NAME VARCHAR(50),
    CAPACITY INT NOT NULL,
    TYPE VARCHAR(20),
    FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH(BRANCH_ID),
);

-- Steph
CREATE TABLE FACILITY (
    FACILITY_ID SERIAL PRIMARY KEY,
    FACILITY_NAME VARCHAR(50),
);

-- Steph
CREATE TABLE ROOM_FACILITY (
    ROOM_ID INT NOT NULL,
    FACILITY_ID INT NOT NULL,
    QUANTITY INT,
    FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID),
    FOREIGN KEY (FACILITY_ID) REFERENCES FACILITY(FACILITY_ID),
    PRIMARY KEY (ROOM_ID, FACILITY_ID)
);

-- Owen

CREATE TABLE STUDENT(
    STUDENT_ID SERIAL PRIMARY KEY,
    STUDENT_EMAIL VARCHAR(50),
    STUDENT_MOBILE VARCHAR(15),
    STUDENT_FIRST_NAME VARCHAR(30),
    STUDENT_MIDDLE_NAME VARCHAR(30),
    STUDENT_LAST_NAME VARCHAR(30),
    STUDENT_TITLE VARCHAR(4),
    STUDENT_COUNTRY_CODE VARCHAR(3),
    STUDENT_LANDLINE VARCHAR(15),
    STUDENT_ADDR1 VARCHAR(50),
    STUDENT_ADDR2 VARCHAR(50),
    STUDENT_CITY VARCHAR(30),
    STUDENT_POSTCODE VARCHAR(12),
    STUDENT_DATE_OF_BIRTH DATE
);

-- Owen

CREATE TABLE EMERGENCY_CONTACT (
);

-- Owen

CREATE TABLE HEALTH_CONDITION (
);

-- Owen

CREATE TABLE STUDENT_HEALTH_CONDITION (
);

-- Bradley

CREATE TABLE EVALUATION_SESSION (
);

-- Bradley

CREATE TABLE ASSIGNMENT (
);

-- Bradley

CREATE TABLE STUDENT_ASSIGNMENT (
);

-- Bradley

CREATE TABLE SESSION (
);

-- Bradley

CREATE TABLE SESSION_STUDENT (
);

-- Bradley

CREATE TABLE SESSION_STAFF (
);

-- Owen

CREATE TABLE ENROLMENT (
);

-- Owen

CREATE TABLE STUDENT_PAYMENT (
);